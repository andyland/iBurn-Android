buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }

        dependencies {
            classpath 'io.fabric.tools:gradle:1.+'
        }
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 33
        versionName "2019.0.0.1"

        applicationId "com.iburnapp.iburn2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        archivesBaseName = "iburn-$versionName-$versionCode"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    splits {
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "armeabi-v7a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    signingConfigs {
        release {
            // We'll read release signingConfig's data from
            // gradle.properties in the project's root directory
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    flavorDimensions "production"

    productFlavors {
        regular {
            buildConfigField "boolean", "MOCK", "false"
            dimension "production"
        }
        // Mock location and date data
        mock {
            buildConfigField "boolean", "MOCK", "true"
            dimension "production"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
            debuggable false
        }
        unsigned {
            minifyEnabled false
            signingConfig null
            debuggable false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

// Read Signing key from gradle.properties located in project root
if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}

def SUPPORT_LIB_VERSION = "28.0.0"
def PLAY_SERVICES_VERSION = "17.0.0"

dependencies {

    // Android Support libraries
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'

    // Google Play Services
    implementation "com.google.android.gms:play-services-gcm:$PLAY_SERVICES_VERSION"
    implementation "com.google.android.gms:play-services-location:$PLAY_SERVICES_VERSION"

    // 3rd Party libraries
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.jakewharton.timber:timber:4.7.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.0.3'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.patloew.rxlocation:rxlocation:1.0.3'
    implementation 'com.tonicartos:superslim:0.4.13'
    implementation 'xyz.danoz:recyclerviewfastscroller:0.1.3'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.eclipsesource.j2v8:j2v8:4.8.2@aar'
    implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:6.3.0'
    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-locationlayer:0.7.1'

    implementation 'com.roughike:bottom-bar:2.3.1'
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'com.github.hotchemi:permissionsdispatcher:2.4.0'
    kapt 'com.github.hotchemi:permissionsdispatcher-processor:2.4.0'

    implementation 'com.jakewharton:butterknife:10.1.0'
    kapt 'com.jakewharton:butterknife-compiler:10.1.0'

    implementation 'androidx.room:room-rxjava2:2.0.0'
    implementation 'androidx.room:room-runtime:2.0.0'
    kapt 'androidx.room:room-compiler:2.0.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    api('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }

    // Test dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.6.3'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.annotation:annotation:1.0.0'

}